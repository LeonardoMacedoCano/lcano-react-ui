{"version":3,"file":"index.js","sources":["../../src/utils/StyledUtils.ts","../../src/components/ThemeSelector/ThemeSelector.tsx","../../src/components/Container/Container.tsx","../../src/components/Panel/Panel.tsx","../../src/components/Stack/Stack.tsx"],"sourcesContent":["import { CSSObject } from 'styled-components';\n\nexport const convertReactStyleToCSSObject = (style: React.CSSProperties): CSSObject => {\n  return Object.fromEntries(\n    Object.entries(style).map(([key, value]) => [key, value])\n  );\n}\n\nexport type VariantColor = 'primary' | 'secondary' | 'tertiary' | 'quaternary' | 'success' | 'info' | 'warning';\n\nexport interface VariantProps {\n  variant: VariantColor;\n}\n\nexport const getVariantColor = (theme: any, variant?: VariantProps['variant']) => {\n  const colors = theme.colors;\n\n  const validVariant = variant || 'info';\n\n  switch (validVariant) {\n    case 'primary':\n    case 'secondary':\n    case 'tertiary':\n    case 'quaternary':\n    case 'success':\n    case 'info':\n    case 'warning':\n      return colors[validVariant];\n    default:\n      return colors.defaultColor;\n  }\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Tema } from '../../types/Tema';\n\nexport interface ThemeOption {\n  title: string;\n  colors: {\n    primary: string;\n    secondary: string;\n    tertiary: string;\n    quaternary: string;\n    [key: string]: string;\n  };\n}\n\nexport interface ThemeSelectorProps {\n  themes: Tema[];\n  currentTheme?: number;\n  onThemeChange: (id: number) => void;\n}\n\nconst ThemeSelector: React.FC<ThemeSelectorProps> = ({\n  themes,\n  currentTheme,\n  onThemeChange,\n}) => {\n  return (\n    <ThemeGrid>\n      {themes.map((theme) => (\n        <ThemeItem \n          key={theme.title}\n          isSelected={theme.id === currentTheme}\n          onClick={() => onThemeChange(theme.id)}\n          borderColor={theme.quaternaryColor}\n        >\n          <ThemeName>{theme.title}</ThemeName>\n          <ColorPalette>\n            <ColorBlock color={theme.primaryColor} />\n            <ColorBlock color={theme.secondaryColor} />\n            <ColorBlock color={theme.tertiaryColor} />\n            <ColorBlock color={theme.quaternaryColor} />\n          </ColorPalette>\n        </ThemeItem>\n      ))}\n    </ThemeGrid>\n  );\n};\n\nconst ThemeGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n  gap: 15px;\n  width: 100%;\n`;\n\ninterface ThemeItemProps {\n  isSelected: boolean;\n  borderColor: string;\n}\n\nconst ThemeItem = styled.div<ThemeItemProps>`\n  background-color: ${props => props.theme.colors.primary};\n  border-radius: 5px;\n  overflow: hidden;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n  border: 2px solid ${props => props.isSelected ? props.borderColor : 'transparent'};\n\n  &:hover {\n    transform: translateY(-3px);\n  }\n`;\n\nconst ThemeName = styled.div`\n  padding: 10px;\n  text-align: center;\n  font-weight: 600;\n  color: ${props => props.theme.colors.white};\n`;\n\ninterface ColorBlockProps {\n  color: string;\n}\n\nconst ColorPalette = styled.div`\n  display: flex;\n  height: 30px;\n`;\n\nconst ColorBlock = styled.div<ColorBlockProps>`\n  flex: 1;\n  height: 100%;\n  background-color: ${props => props.color};\n`;\n\nexport default ThemeSelector;","import { ReactNode, CSSProperties, FC } from 'react';\nimport styled from 'styled-components';\nimport { VariantColor } from '../../utils';\n\nexport interface ContainerProps {\n  children: ReactNode;\n  height?: string;\n  width?: string;\n  maxWidth?: string;\n  margin?: string;\n  padding?: string;\n  backgroundColor?: string;\n  variantColor?: VariantColor;\n  style?: CSSProperties;\n}\n\nconst Container: FC<ContainerProps> = ({ \n  children, \n  height,\n  width,\n  maxWidth,\n  margin, \n  padding, \n  backgroundColor,\n  variantColor,\n  style \n}) => (\n  <StyledContainer \n    height={height}\n    width={width}\n    margin={margin} \n    padding={padding} \n    backgroundColor={backgroundColor} \n    variantColor={variantColor}\n    style={style}\n    maxWidth={maxWidth}\n  >\n    {children}\n  </StyledContainer>\n);\n\nexport default Container;\n\nconst StyledContainer = styled.div<ContainerProps>`\n  height: ${({ height }) => height || 'auto'};\n  width: ${({ width }) => width || 'auto'};\n  margin: ${({ margin }) => margin || '0'};\n  padding: ${({ padding }) => padding || '0'};\n  max-width: ${({ maxWidth }) => maxWidth || 'none'};\n  background-color: ${({ backgroundColor, theme, variantColor }) => variantColor && theme.colors[variantColor] || backgroundColor};\n`;\n","import React, { ReactNode } from 'react';\nimport styled, { CSSProperties } from 'styled-components';\nimport Container from '../Container';\n\nexport interface PanelProps {\n  title?: ReactNode;\n  children: ReactNode;\n  footer?: ReactNode;\n  width?: string;\n  maxWidth?: string;\n  padding?: string;\n  transparent?: boolean;\n  actionButton?: ReactNode;\n  style?: CSSProperties;\n}\n\nconst Panel: React.FC<PanelProps> = ({ \n  title,\n  children,\n  footer,\n  width,\n  maxWidth,\n  padding,\n  actionButton ,\n  style,\n  transparent = false\n}) => {\n  return (\n    <Container\n      width={width || '100%'}\n      maxWidth={maxWidth}\n      padding={padding}\n      margin=\"auto\"\n      backgroundColor=\"transparent\"\n      style={style}\n    >\n      {(title || actionButton) && (\n        <Title>\n          <h3>{title}</h3>\n          {actionButton && <ActionContainer>{actionButton}</ActionContainer>}\n        </Title>\n      )}\n      <Container\n        width=\"100%\"\n        variantColor={transparent ? undefined : \"secondary\"}\n        backgroundColor={transparent ? \"transparent\" : undefined}\n        margin=\"20px 0 0 0\"\n        style={\n          transparent ?\n          {} :\n          {\n            boxShadow: '0 0 2px',\n            borderRadius: '5px',\n          }\n        }\n      >\n        <Body>{children}</Body>\n        {footer && <Footer>{footer}</Footer>}\n      </Container>\n    </Container>\n  );\n};\n\nexport default Panel;\n\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.gray};\n  h3 {\n    color: ${({ theme }) => theme.colors.white};\n  }\n`;\n\nconst ActionContainer = styled.div`\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n`;\n\nconst BaseBox = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Body = styled(BaseBox)`\n  justify-content: space-between;\n`;\n\nconst Footer = styled(BaseBox)`\n  height: 35px;\n  justify-content: center;\n  border-top: 1px solid ${({ theme }) => theme.colors.gray};\n`;\n","import { CSSProperties, FC, ReactNode } from 'react';\nimport styled, { css } from 'styled-components';\n\ntype DividerPosition = 'top' | 'bottom' | 'left' | 'right' | 'x' | 'y';\n\nexport interface StackProps {\n  children: ReactNode;\n  width?: string;\n  height?: string;\n  direction?: 'row' | 'column';\n  divider?: DividerPosition;\n  style?: CSSProperties;\n  alignCenter?: boolean;\n  alignRight?: boolean;\n  justifyCenter?: boolean;\n  justifyBetween?: boolean;\n}\n\nexport const Stack: FC<StackProps> = ({\n  children,\n  direction = 'row',\n  divider,\n  ...rest\n}) => {\n  return (\n    <StackContainer direction={direction} divider={divider} {...rest}>\n      {children}\n    </StackContainer>\n  );\n};\n\nexport default Stack;\n\ninterface StackContainerProps extends StackProps {}\n\nconst StackContainer = styled.div<StackContainerProps>`\n  display: flex;\n  flex-direction: ${({ direction }) => direction};\n  width: ${({ width }) => width || '100%'};\n  height: ${({ height }) => height || 'auto'};\n\n  ${({ alignCenter }) => alignCenter && 'align-items: center;'}\n  ${({ alignRight }) => alignRight && 'align-items: flex-end;'}\n  ${({ justifyCenter }) => justifyCenter && 'justify-content: center;'}\n  ${({ justifyBetween }) => justifyBetween && 'justify-content: space-between;'}\n\n  ${({ divider, direction, theme }) =>\n    divider &&\n    css`\n      > * + * {\n        ${(() => {\n          const color = theme.colors.gray;\n\n          if (direction === 'row') {\n            if (divider === 'left' || divider === 'x') return `border-left: 1px solid ${color};`;\n            if (divider === 'right') return `border-right: 1px solid ${color};`;\n          }\n\n          if (direction === 'column') {\n            if (divider === 'top' || divider === 'y') return `border-top: 1px solid ${color};`;\n            if (divider === 'bottom') return `border-bottom: 1px solid ${color};`;\n          }\n\n          return '';\n        })()}\n      }\n    `}\n`;\n"],"names":["_jsx","_jsxs","css"],"mappings":"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"}
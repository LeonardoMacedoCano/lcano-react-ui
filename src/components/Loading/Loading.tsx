import React, { useEffect, useState } from 'react';
import { useTheme } from 'styled-components';
import Container from '../Container';

export interface LoadingProps {
  isLoading: boolean;
};

const svgAnimation = `
  @keyframes rotateRightLeft {
    0% { transform: rotate(0deg); }
    50% { transform: rotate(360deg); }
    100% { transform: rotate(0deg); }
  }

  .spin {
    animation: rotateRightLeft 4s ease-in-out infinite;
  }
`;

const LOADING_DELAY = 100;

const Loading: React.FC<LoadingProps> = ({ isLoading }) => {
  const [shouldDisplay, setShouldDisplay] = useState(false);
  const theme = useTheme();

  useEffect(() => {
    let timer: ReturnType<typeof setTimeout>;
    if (isLoading) {
      timer = setTimeout(() => {
        setShouldDisplay(true);
      }, LOADING_DELAY);
    } else {
      setShouldDisplay(false);
    }

    return () => {
      clearTimeout(timer);
    };
  }, [isLoading]);

  if (!shouldDisplay) return null;

  const svgContent = `
    <style>${svgAnimation}</style>
    <svg 
      version="1.0" 
      xmlns="http://www.w3.org/2000/svg"
      width="150px"
      height="150px"
      viewBox="0 0 512.000000 512.000000"
      preserveAspectRatio="xMidYMid meet" 
      class="spin"
    >
      <g 
        transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)"
        fill="${theme.colors.quaternary}" 
        stroke="none"
      >
        <path d="M2815 4467 c-97 -38 -137 -87 -179 -215 -17 -49 -35 -86 -46 -92 -10
        -6 -43 -10 -72 -10 -29 0 -93 -5 -141 -11 -104 -13 -103 -13 -154 80 -55 100
        -80 129 -136 158 -41 22 -66 27 -119 28 -66 0 -72 -2 -274 -104 -114 -57 -224
        -119 -245 -138 -53 -48 -81 -114 -81 -190 0 -53 6 -76 41 -149 22 -47 41 -95
        41 -106 0 -11 -24 -45 -53 -76 -29 -31 -71 -79 -92 -105 -56 -70 -62 -72 -156
        -42 -109 34 -180 34 -250 -3 -85 -44 -108 -83 -184 -319 -73 -222 -85 -288
        -65 -349 33 -98 86 -145 218 -188 49 -17 86 -35 92 -46 6 -10 10 -43 10 -72 0
        -29 5 -93 11 -141 13 -105 14 -103 -89 -159 -97 -53 -122 -76 -152 -134 -19
        -38 -25 -65 -25 -116 0 -66 3 -73 104 -274 57 -114 119 -224 138 -245 48 -53
        114 -81 190 -81 53 0 76 6 149 41 47 22 95 41 106 41 11 0 45 -24 76 -53 31
        -29 79 -71 105 -92 70 -56 72 -62 42 -156 -47 -150 -23 -263 72 -335 49 -37
        426 -164 509 -172 87 -7 184 38 226 106 12 20 36 74 53 121 36 101 25 95 215
        110 157 13 142 20 210 -101 36 -63 58 -91 94 -115 59 -41 117 -57 176 -49 58
        7 437 194 489 242 56 50 82 112 82 192 0 55 -6 77 -40 149 -23 47 -41 94 -41
        105 0 11 24 45 53 76 29 31 71 79 92 105 56 70 62 72 156 42 109 -34 180 -34
        250 3 85 44 108 83 184 319 76 232 86 292 61 357 -37 96 -87 138 -214 180 -49
        17 -86 35 -92 46 -6 10 -10 43 -10 72 0 29 -5 93 -11 142 -13 105 -17 99 103
        166 63 36 91 58 115 94 41 59 57 117 49 176 -7 57 -195 438 -243 491 -48 53
        -114 81 -190 81 -53 0 -76 -6 -149 -41 -47 -22 -95 -41 -106 -41 -11 0 -45 24
        -76 53 -31 29 -79 71 -105 92 -70 56 -72 62 -42 156 34 109 34 180 -3 250 -44
        85 -83 108 -319 185 -218 71 -300 85 -358 61z m274 -243 c225 -72 231 -75 231
        -118 0 -18 -8 -57 -19 -87 -30 -89 -34 -133 -17 -191 19 -67 46 -104 121 -164
        33 -26 89 -74 123 -106 115 -103 203 -113 360 -38 85 40 93 42 114 28 34 -24
        211 -383 204 -414 -5 -17 -26 -34 -79 -60 -99 -50 -129 -76 -162 -136 -23 -42
        -29 -66 -29 -113 0 -111 16 -290 30 -340 25 -92 90 -147 224 -190 64 -20 90
        -40 90 -67 0 -24 -107 -361 -127 -400 -16 -33 -55 -37 -124 -13 -85 30 -129
        36 -185 25 -68 -14 -120 -51 -180 -125 -26 -33 -74 -88 -105 -122 -104 -112
        -114 -204 -39 -361 40 -85 42 -93 28 -114 -24 -34 -383 -211 -414 -204 -17 5
        -34 26 -60 79 -50 99 -76 129 -136 162 -59 33 -89 35 -288 21 -162 -11 -211
        -27 -270 -85 -39 -39 -52 -62 -75 -132 -30 -92 -48 -119 -78 -119 -10 0 -109
        30 -218 66 -233 76 -226 70 -188 193 50 159 22 257 -100 353 -35 28 -91 76
        -124 106 -75 69 -125 91 -203 92 -50 0 -74 -7 -144 -41 -135 -65 -127 -70
        -244 161 -117 230 -117 220 9 287 92 49 138 97 161 167 17 51 17 53 -11 370
        -9 103 -82 180 -210 222 -88 29 -115 47 -115 77 0 10 30 109 66 218 76 233 70
        226 193 188 159 -50 257 -22 353 100 28 35 76 91 106 124 69 75 91 125 92 203
        0 50 -7 74 -41 144 -65 135 -70 127 161 244 230 117 220 117 287 -9 78 -145
        157 -186 320 -166 50 6 118 11 151 11 158 0 241 67 297 240 20 64 40 90 68 90
        10 0 99 -25 196 -56z"/>
        <path d="M2380 3444 c-184 -39 -325 -117 -460 -253 -110 -111 -166 -201 -216
        -349 -95 -278 -41 -596 141 -833 288 -374 822 -461 1214 -198 184 123 310 296
        373 516 19 66 23 102 23 233 0 132 -3 167 -23 235 -96 336 -358 580 -695 649
        -93 19 -268 20 -357 0z m401 -216 c229 -80 401 -264 459 -494 27 -106 27 -254
        -1 -354 -68 -247 -261 -438 -505 -500 -106 -27 -254 -27 -354 1 -194 53 -356
        184 -442 356 -62 124 -81 213 -76 356 3 92 9 127 34 198 77 219 261 389 486
        449 109 30 295 24 399 -12z"/>
      </g>
    </svg>
  `;

  return (
    <Container
      width="100vw"
      height="100vh"
      backgroundColor="transparent"
      style={{
        position: 'fixed',
        top: 0,
        left: 0,
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        zIndex: 9999,
      }}
    >
      <div dangerouslySetInnerHTML={{ __html: svgContent }} />
    </Container>
  );
};

export default Loading;
